{"ast":null,"code":"var _jsxFileName = \"/home/bsz/Repositories/reactelevator/src/ElevatorDisplay.js\";\nimport React from \"react\";\nimport \"./ElevatorDisplay.css\"; // Import CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ElevatorDisplay = _ref => {\n  let {\n    floor,\n    direction\n  } = _ref;\n  // Calculate height of elevator based on floor\n  const elevatorHeight = floor * 20 + \"px\"; // Assumes each floor is 20px in height\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Elevator Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"elevator-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"elevator\",\n        style: {\n          height: elevatorHeight\n        },\n        children: [\"Floor \", floor, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), \"Direction: \", direction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = ElevatorDisplay;\nexport default ElevatorDisplay;\nvar _c;\n$RefreshReg$(_c, \"ElevatorDisplay\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ElevatorDisplay","_ref","floor","direction","elevatorHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","height","_c","$RefreshReg$"],"sources":["/home/bsz/Repositories/reactelevator/src/ElevatorDisplay.js"],"sourcesContent":["import React from \"react\";\nimport \"./ElevatorDisplay.css\"; // Import CSS file for styling\n\nconst ElevatorDisplay = ({ floor, direction }) => {\n  // Calculate height of elevator based on floor\n  const elevatorHeight = floor * 20 + \"px\"; // Assumes each floor is 20px in height\n\n  return (\n    <div>\n      <h2>Elevator Display</h2>\n      <div className=\"elevator-container\">\n        {/* Render the elevator */}\n        <div className=\"elevator\" style={{ height: elevatorHeight }}>\n          Floor {floor}\n          <br />\n          Direction: {direction}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ElevatorDisplay;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,uBAAuB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,eAAe,GAAGC,IAAA,IAA0B;EAAA,IAAzB;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAAF,IAAA;EAC3C;EACA,MAAMG,cAAc,GAAGF,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;EAE1C,oBACEH,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACzBV,OAAA;MAAKW,SAAS,EAAC,oBAAoB;MAAAL,QAAA,eAEjCN,OAAA;QAAKW,SAAS,EAAC,UAAU;QAACC,KAAK,EAAE;UAAEC,MAAM,EAAER;QAAe,CAAE;QAAAC,QAAA,GAAC,QACrD,EAACH,KAAK,eACZH,OAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACK,EAACN,SAAS;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACjB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACI,EAAA,GAjBIb,eAAe;AAmBrB,eAAeA,eAAe;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}